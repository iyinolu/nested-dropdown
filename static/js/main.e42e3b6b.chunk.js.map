{"version":3,"sources":["utils/styles.js","utils/static.js","component/index.js","helpers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Main","styled","Container","Title","Node","Nested","animated","div","InputField","Form","TEXT_BLOCK","TreeComponent","React","memo","children","last","title","useState","open","setOpen","useMeasure","ref","viewHeight","height","previous","value","useRef","useEffect","current","usePrevious","context","useContext","treeContext","closeAll","setCloseAll","useSpring","from","opacity","y","to","style","display","verticalAlign","alignItems","onClick","marginRight","cursor","textAlign","getRandomInt","min","max","Math","ceil","floor","random","TreeJsonMod","n","m","Array","keys","map","val","randn","slice","temp","i","push","RenderData","data","idx","field","Object","length","shift","createContext","App","setData","showData","setShowData","treeParams","setTreeParams","axios","post","query","then","res","continents","catch","err","console","log","response","renderFormField","key","label","placeholder","fontWeight","color","type","returnData","useMemo","onSubmit","e","preventDefault","parseInt","target","handleSubmit","marginTop","width","padding","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e42e3b6b.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport styled from 'styled-components'\r\nimport { animated } from '@react-spring/web'\r\n\r\nexport const Main = styled('span')`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: #0f0f0f;\r\n`\r\n\r\nexport const Container = styled('div')`\r\n    width: auto;\r\n    height: 100%;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n    display: flex;\r\n    min-height: 100vh;\r\n    padding: 50px 0px;\r\n    flex-direction: column;    \r\n`\r\n\r\nexport const Title = styled('span')`\r\n    vertical-align: middle;\r\n    background-color: #c7c4c4;\r\n    border: 1px solid grey;\r\n    padding: 2px 8px;\r\n    border-radius: 5px;\r\n`\r\n\r\nexport const Node = styled('span')`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    padding: 10px 0px 0px 0px;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    vertical-align: middle;\r\n    margin-left: 31px\r\n`\r\n\r\nexport const Nested = styled(animated.div)`\r\n    will-change: transform, opacity, height;\r\n    margin-left: 10px; \r\n    display: flex;\r\n    flex-direction: column;\r\n    border-left: 1px dashed grey;\r\n    overflow-y: hidden;\r\n`\r\n\r\nexport const InputField = styled('input')`\r\n    margin-right: 15px; \r\n    padding: 10px;\r\n    background-color: #2e2e2e;\r\n    color: grey;\r\n    width: auto;\r\n`\r\n\r\nexport const Form = styled('form')`\r\n    display: flex;\r\n    margin-top: 30px;\r\n`","/* eslint-disable no-unused-vars */\r\nexport const TEXT_BLOCK = `\r\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla ac magna non justo hendrerit feugiat. \r\n  Donec id fermentum mauris. Duis vitae ornare velit. Mauris dapibus, neque vel facilisis hendrerit, \r\n  libero ligula tempus est, sed gravida nisl nibh ac mi. Donec posuere, dolor et dignissim sagittis, \r\n  neque sem pulvinar lectus, quis tempor justo odio at augue. Phasellus in cursus dolor, at viverra neque. \r\n  Maecenas non rutrum nibh. Nam efficitur est ex, eget malesuada est vehicula sit amet. Donec ullamcorper \r\n  fringilla justo, at dictum massa elementum eleifend. Ut rutrum blandit lorem eu elementum. Donec diam turpis, \r\n  fringilla egestas scelerisque a, vulputate et nisi. In faucibus libero id enim lobortis, et auctor urna sollicitudin. \r\n  Proin ac nunc a metus lobortis condimentum ut vitae nunc. In hac habitasse platea dictumst. Vestibulum maximus \r\n  imperdiet enim id laoreet. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\r\n`\r\n\r\nexport const query = `\r\n  query {\r\n    continents {\r\n      name,\r\n      countries {\r\n        name\r\n        languages {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { useSpring, a } from '@react-spring/web'\r\nimport { Title, Node, Nested } from '../utils/styles';\r\nimport useMeasure from 'react-use-measure'\r\nimport { treeContext } from '../App';\r\n\r\nfunction usePrevious(value) {\r\n    const ref = React.useRef()\r\n    React.useEffect(() => void (ref.current = value), [value])\r\n    return ref.current\r\n}\r\n\r\n/**\r\n * Building block for Tree structure.\r\n * Returns renderable tree node.\r\n */\r\nexport const TreeComponent  = React.memo(({children, last, title}) => {    \r\n \r\n    const [open, setOpen] = React.useState(false)\r\n    const [ref, { height: viewHeight }] = useMeasure()\r\n    const previous = usePrevious(open)\r\n    const context = React.useContext(treeContext)\r\n    const {closeAll, setCloseAll} = context    \r\n\r\n    React.useEffect(() => {\r\n        // reset closeAll when parent component rerenders\r\n        if (closeAll) {\r\n            setCloseAll(false) \r\n        }        \r\n    }, [closeAll, setCloseAll])\r\n    \r\n    // Animate Tree Rendering\r\n    const { height, opacity, y } = useSpring({\r\n        from: { height: 0, opacity: 0, y: 0 },\r\n        to: {\r\n            height: open && !closeAll ? viewHeight : 0,\r\n            opacity: open && !closeAll ? 1 : 0,\r\n            y: open ? 0 : 20,\r\n        },\r\n    })\r\n\r\n    const Icon = () => {\r\n        return (\r\n            <span \r\n                onClick={() => {\r\n                    if (last) {\r\n                        setCloseAll(true)\r\n                        setOpen(false)                        \r\n                    } else {\r\n                        setOpen(!open)\r\n                    }\r\n                }} \r\n                style={{ marginRight: \"15px\", cursor: \"pointer\"}}\r\n            >\r\n                {open ? \"✅\" : \"⛔️\"}\r\n            </span>\r\n        )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Node> \r\n          <div style={{ display:\"flex\", verticalAlign: \"middle\", alignItems:'center' }}>\r\n            {Icon()}\r\n            <Title style={{ verticalAlign: \"middle\", display: \"flex\", textAlign: \"center\"}}>\r\n                {title}\r\n            </Title>\r\n          </div>  \r\n  \r\n            <Nested style={{ opacity,\r\n                height: (open && !closeAll) && previous === open ? 'auto' : height \r\n            }}>\r\n                <a.div ref={ref} style={{ y }} children={children} />\r\n            </Nested>\r\n        </Node>\r\n      </div>\r\n    )\r\n})","import { TEXT_BLOCK } from '../utils/static';\r\nimport { TreeComponent } from '../component';\r\n\r\n/**\r\n * Generate a Random Number between \r\n * min and max exclusive.\r\n */\r\nexport function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\n/**\r\n * This helper function takes in  n (number of nodes) and m (depth of tree).\r\n * Returns renderable tree-structure react component to be displayed\r\n */\r\nexport function TreeJsonMod(n, m) {\r\n    if (n === 0) {\r\n        return [...Array(m).keys()].map((val) => {\r\n        var randn = getRandomInt(1, 100)\r\n        return (\r\n                <TreeComponent last={true} title={TEXT_BLOCK.slice(randn, randn + 10)}>\r\n                </TreeComponent>\r\n            )\r\n        })\r\n    }\r\n    else {\r\n        var temp = []\r\n        for (let i = 0; i < m; i++) {\r\n            var randn = getRandomInt(1, 100)\r\n            var title = TEXT_BLOCK.slice(randn, randn + 30)\r\n            temp.push(\r\n                <TreeComponent last={false} key={`${title.slice(3, 6)} ${i}`} title={title}>\r\n                    {TreeJsonMod(n-1, m)}\r\n                </TreeComponent>\r\n            )\r\n        }\r\n        return temp\r\n    }\r\n}\r\n\r\n/**\r\n * This helper function takes in continent API data.\r\n * Returns renderable tree-structure react component to be displayed\r\n */\r\nexport const RenderData = (data) => {\r\n    return data.map((value, idx) => {\r\n        var field = Object.keys(value)\r\n        if (field.length === 1) {\r\n            return (\r\n                <TreeComponent key={value['name']} last={true} title={value['name']}>\r\n                </TreeComponent>\r\n            )\r\n        }\r\n        // remove the 'name' key. \r\n        // we are assuming there are only at most two keys\r\n        field.shift() \r\n        if (value[field[0]].length === 0) {\r\n            return (\r\n                <TreeComponent key={value['name']} last={true} title={value['name']}>\r\n                </TreeComponent>\r\n            )\r\n        } else {\r\n            return (\r\n                <TreeComponent key={value['name']} last={false} title={value['name']}>\r\n                    {RenderData(value[field[0]])}\r\n                </TreeComponent>\r\n            )\r\n        }\r\n    })   \r\n}","/* eslint-disable no-unused-vars */\n\nimport React from 'react';\nimport './App.css';\nimport { Container, Main, InputField, Form } from './utils/styles';\nimport { query } from './utils/static';\nimport { TreeJsonMod, RenderData } from './helpers'\nimport axios from 'axios';\n\nexport const treeContext = React.createContext();\n\nfunction App() {\n  /*\n   * Main Component. Renders form fiels, buttons, and \n   * dropdown tree.\n  */\n  const [data, setData] = React.useState([])\n  const [showData, setShowData] = React.useState(false)\n  const [treeParams, setTreeParams] = React.useState({n: 2, m:2})\n  const [closeAll, setCloseAll] = React.useState(false)\n\n  // Render Tree component with random data\n  const treeDropdown = () => {\n    return TreeJsonMod(treeParams.n, treeParams.m)\n  }\n\n  React.useEffect(() => {\n    axios.post(\"https://countries.trevorblades.com/\", {\n      query\n    }).then(res => {\n      setData(res.data.data.continents)\n    }).catch(err => console.log(err.response))\n  }, []) \n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setShowData(false)\n    var n = parseInt(e.target[0].value)\n    var m = parseInt(e.target[1].value)\n    setTreeParams({n:n, m:m})\n  }\n\n  const renderFormField = (key, label, placeholder) => {\n    return (\n      <span key={key} style={{ display: \"flex\", alignItems: \"center\"}}>\n        <span style={{ fontWeight: \"500\", color: \"grey\", marginRight: \"10px\"}}>\n          {label}\n        </span>\n        <InputField type='number' placeholder={placeholder} />\n      </span>\n    )\n  }\n\n  const returnData = React.useMemo(() => {\n    return RenderData(data)\n  }, [data])\n  \n  return (\n    <Main>\n      <Form onSubmit={(e) => handleSubmit(e)} style={{ marginTop: \"30px\"}}>\n        {renderFormField(1, \"N\", \"Enter Tree Depth...\")}\n        {renderFormField(2, \"M\", \"No of Children in Each Node...\")}\n        <button style={{ height: \"40px\", width: \"40px\"}} type='submit'>Go</button>\n      </Form>\n      <button style= {{ marginTop: \"20px\", padding: \"15px\"}} onClick={() => setShowData(true)}>\n        Show Continent Data \n      </button>\n      <Container>\n        <treeContext.Provider value={{closeAll, setCloseAll}}>\n          {showData ? data.length > 0 ? returnData : \"\" : treeDropdown()}           \n        </treeContext.Provider>\n      </Container>\n    </Main>\n  );\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}